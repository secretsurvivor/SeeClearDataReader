/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.secretsurvivor.modpackdownloader;

import javax.swing.JFileChooser;
import com.proto.settings.SettingsProto.ProfileList;
import com.proto.settings.SettingsProto.ProfileList.Profile;
import javax.swing.JOptionPane;

/**
 *
 * @author Connor
 */
public class SettingsFrame extends javax.swing.JFrame {
    public static String minecraft_path;
    public static String selected_modpack;
    public static boolean replace_mods;
    public static String[] profiles = {"Default","New Profile..."};
    private static ProfileList localSettings;
    
    public static void InstallProfiles(ProfileList inp){
        localSettings = inp;
        String pro = "";
        for (Profile p : inp.getProfilesList()){
            pro = pro + ";" + p.getName();
        }
        pro = pro + ";" + "New Profile...";
        profiles = pro.split(";");
        minecraft_path = inp.getProfiles(0).getMinecraftPath();
        selected_modpack = inp.getProfiles(0).getSelectedModpack();
        replace_mods = inp.getProfiles(0).getReplace();
    }
    private int ChangeProfile(Object profile){
        boolean present = false;
        Profile temp = null;
        for (Profile p : localSettings.getProfilesList()){
            if (p.getName() == profile){
                present = true;
                temp = p;
            }
        }
        if (!present){
            return 1;
        }
        minecraft_path = temp.getMinecraftPath();
        selected_modpack = temp.getSelectedModpack();
        replace_mods = temp.getReplace();
        
        return 0;
    }
    private void Save(){
        
    }
    /**
     * Creates new form SettingsFrame
     */
    public SettingsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        mcpath_TextField = new javax.swing.JTextField();
        mcpath_Button = new javax.swing.JButton();
        mcpath_Label = new javax.swing.JLabel();
        sm_TextField = new javax.swing.JTextField();
        sm_Label = new javax.swing.JLabel();
        sm_Button = new javax.swing.JButton();
        rm_Label = new javax.swing.JLabel();
        rm_CheckBox = new javax.swing.JCheckBox();
        save_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(profiles));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        mcpath_TextField.setText(minecraft_path);

        mcpath_Button.setText("...");
        mcpath_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcpath_ButtonActionPerformed(evt);
            }
        });

        mcpath_Label.setText("Minecraft Path");

        sm_TextField.setText(selected_modpack);

        sm_Label.setText("Selected Modpack");

        sm_Button.setText("...");
        sm_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_ButtonActionPerformed(evt);
            }
        });

        rm_Label.setText("Replace Mods?");

        rm_CheckBox.setSelected(replace_mods);

        save_Button.setText("Save");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(sm_Label)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rm_Label)
                                    .addComponent(mcpath_Label))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sm_TextField)
                            .addComponent(mcpath_TextField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rm_CheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(175, 175, 175)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mcpath_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sm_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(save_Button)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mcpath_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mcpath_Button)
                    .addComponent(mcpath_Label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sm_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sm_Label)
                    .addComponent(sm_Button))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rm_Label)
                    .addComponent(rm_CheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(save_Button)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    final JFileChooser fc = new JFileChooser();
    private void mcpath_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcpath_ButtonActionPerformed
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION){
            minecraft_path = fc.getSelectedFile().getPath();
        }
    }//GEN-LAST:event_mcpath_ButtonActionPerformed

    private void sm_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_ButtonActionPerformed
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION){
            selected_modpack = fc.getSelectedFile().getPath();
        }
    }//GEN-LAST:event_sm_ButtonActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedItem().equals("New Profile...")){
            String name = JOptionPane.showInputDialog("Please insert name: ");
            Profile.Builder profile_t = Profile.newBuilder();
            profile_t.setName(name);
            if (!(minecraft_path == null)){
                profile_t.setMinecraftPath(minecraft_path);
            }
            if (!(selected_modpack == null)){
                profile_t.setSelectedModpack(selected_modpack);
            }
            if (!replace_mods){
                profile_t.setReplace(replace_mods);
            }
            Profile profile_b = profile_t.build();
            ProfileList.Builder list_t = ProfileList.newBuilder();
            list_t.addAllProfiles(localSettings.getProfilesList());
            list_t.addProfiles(profile_b);
            ProfileList list_b = list_t.build();
            InstallProfiles(list_b);
            jComboBox1.setSelectedItem(name);
            ChangeProfile(name);
        } else {
            ChangeProfile(jComboBox1.getSelectedItem());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Save();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsFrame().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JButton mcpath_Button;
    private javax.swing.JLabel mcpath_Label;
    private javax.swing.JTextField mcpath_TextField;
    private javax.swing.JCheckBox rm_CheckBox;
    private javax.swing.JLabel rm_Label;
    private javax.swing.JButton save_Button;
    private javax.swing.JButton sm_Button;
    private javax.swing.JLabel sm_Label;
    private javax.swing.JTextField sm_TextField;
    // End of variables declaration//GEN-END:variables
}
